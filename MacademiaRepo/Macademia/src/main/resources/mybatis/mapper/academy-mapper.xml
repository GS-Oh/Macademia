<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace = "academyMapper">
	
	<select id="selectCategory" resultType="CategoryVo">
		SELECT NO, NAME
		FROM CLASS_CATEGORY
	</select>
	
	<select id="selectInstructor" resultType="MemberVo">
		SELECT NO, NAME
		FROM MEMBER
		WHERE POSITION_NO = 44
		OR POSITION_NO = 47
		OR POSITION_NO = 48
	</select>
	
	<insert id="insertClass">
		INSERT INTO CLASS(NO,CATEGORY_NO,NAME,DESCRIPTION,FILE_NAME,MAX,MEMBER_NO,FEE,CLASSROOM,BEGIN_DATE,END_DATE,START_TIME,FINISH_TIME) 
    	VALUES(SEQ_CLASS_NO.NEXTVAL, #{categoryNo}, #{name}, #{description}, #{fileName}, #{max}, #{memberNo}, #{fee}, #{classroom}, #{beginDate}, #{endDate}, #{startTime}, #{finishTime})
	</insert>
	
	<insert id="insertCurriculum">
		BEGIN
			<foreach collection="mapList" item="m">
		    INSERT INTO CURRICULUM(NO, CLASS_NO, CURRICULUM_NAME, CURRICULUM_CONTENT) 
		    VALUES (SEQ_CURRICULUM_NO.NEXTVAL, SEQ_CLASS_NO.CURRVAL, #{m.name}, #{m.content});
		    </foreach>
		END;
	</insert>
	
	<insert id="insertStudent">
		INSERT INTO STUDENT(NO,NAME,GENDER,PHONE,EMAIL,PROFILE,NEW_ADDRESS,OLD_ADDRESS,DETAIL_ADDRESS,BIRTH,FINAL_DEGREE,MAJOR,ENROLLED_CLASS,STD_COMMENT) 
    	VALUES(SEQ_STUDENT_NO.NEXTVAL,#{name},#{gender},#{phone},#{email},#{profile},#{newAddress},#{oldAddress},#{detailAddress},#{birth},#{finalDegree},#{major},#{enrolledClass},#{stdComment})
	</insert>
	
	<select id="selectStdList" resultType="StudentVo">
		SELECT S.NO, S.NAME, S.GENDER, S.PHONE, S.EMAIL, S.PROFILE, S.NEW_ADDRESS, S.OLD_ADDRESS, S.DETAIL_ADDRESS, S.BIRTH, S.FINAL_DEGREE, S.MAJOR, C.NAME AS ENROLLED_CLASS, S.JOIN_DATE, S.STD_COMMENT, S.COMPLETE_DATE
		FROM STUDENT S
		JOIN CLASS C ON S.ENROLLED_CLASS = C.NO
		WHERE S.COMPLETE_DATE IS NULL
		<choose>
			<when test="search == 'searchByName'">
				AND S.NAME LIKE '%${keyword}%'
			</when>
			<otherwise>
				AND C.NAME LIKE '%${keyword}%'
			</otherwise>
		</choose>	
		ORDER BY S.NAME
	</select>
	
	<select id="selectClassList" resultType="ClassVo">
		SELECT C.NO,T.NAME AS CATEGORY_NO, C.NAME, M.NAME AS MEMBER_NO, C.CLASSROOM, C.MAX, TO_CHAR(C.BEGIN_DATE, 'YY-MM-DD') AS BEGIN_DATE,TO_CHAR(C.END_DATE, 'YY-MM-DD') AS END_DATE, C.START_TIME,C.FINISH_TIME,C.STATUS
		FROM CLASS C
		JOIN MEMBER M ON C.MEMBER_NO = M.NO
		JOIN CLASS_CATEGORY T ON C.CATEGORY_NO = T.NO
		WHERE STATUS = 'O'
			<if test="no != null">
				AND CATEGORY_NO LIKE '%${no}%'
			</if>
			
			<if test="keyword != null">
				AND C.NAME LIKE '%${keyword}%'
			</if>
		ORDER BY C.BEGIN_DATE
	</select>
	
	<select id="selectOneStudent" resultType="StudentVo">
		SELECT S.NO, S.NAME, S.GENDER, S.PHONE, S.EMAIL, S.PROFILE, S.NEW_ADDRESS, S.OLD_ADDRESS, S.DETAIL_ADDRESS, TO_CHAR(S.BIRTH, 'YYYY-MM-DD') AS BIRTH, S.FINAL_DEGREE, S.MAJOR, S.ENROLLED_CLASS, C.NAME AS ENROLLED_CLASS_NAME, S.JOIN_DATE, S.STD_COMMENT, S.COMPLETE_DATE
		FROM STUDENT S
		JOIN CLASS C ON S.ENROLLED_CLASS = C.NO
		WHERE S.NO = #{no}
	</select>
	
	
	<select id="selectTotalCount" resultType="int">
		SELECT COUNT(S.NO)
		FROM STUDENT S
		JOIN CLASS C ON S.ENROLLED_CLASS = C.NO
		WHERE S.COMPLETE_DATE IS NULL
		<choose>
			<when test="search == 'searchByName'">
				AND S.NAME LIKE
			</when>
			<otherwise>
				AND C.NAME LIKE
			</otherwise>
		</choose>
		'%${keyword}%'
		ORDER BY S.NAME
		
	</select>
	
	<select id="selectTotalClassCount" resultType="int">
		SELECT COUNT(NO) FROM CLASS
		WHERE STATUS = 'O'
			<if test="no != null">
				AND CATEGORY_NO LIKE '%${no}%'
			</if>
			
			<if test="keyword != null">
				AND NAME LIKE '%${keyword}%'
			</if>
	</select>
	
	<update id="updateOne">
		UPDATE STUDENT
		SET PHONE = #{phone}, EMAIL = #{email}, PROFILE = #{profile}, BIRTH = #{birth}, NEW_ADDRESS = #{newAddress}, OLD_ADDRESS = #{oldAddress}, DETAIL_ADDRESS = #{detailAddress}, FINAL_DEGREE = #{finalDegree}, MAJOR = #{major}, ENROLLED_CLASS = #{enrolledClass}, STD_COMMENT = #{stdComment}
		WHERE NO = #{no}
	</update>
	
	<select id="selectOneClass" resultType="ClassVo">
		SELECT T.NAME AS CATEGORY_NO, C.NAME, C.DESCRIPTION, C.FILE_NAME, C.MAX, M.NAME AS MEMBER_NO, TO_CHAR(C.BEGIN_DATE, 'YY-MM-DD') AS BEGIN_DATE, C.START_TIME, C.FEE, C.CLASSROOM, TO_CHAR(C.END_DATE, 'YY-MM-DD') AS END_DATE, C.FINISH_TIME
		FROM CLASS C
		JOIN CLASS_CATEGORY T ON C.CATEGORY_NO = T.NO
		JOIN MEMBER M ON C.MEMBER_NO = M.NO
		WHERE C.NO = #{cno}
	</select>
	
	<select id="selectCurriculumList" resultType="CurriculumVo">
		SELECT NO, CLASS_NO, CURRICULUM_NAME AS NAME, CURRICULUM_CONTENT AS CONTENT
		FROM CURRICULUM
		WHERE CLASS_NO = #{cno}
	</select>
	
	<select id="selectEnrolledStudents" resultType="StudentVo">
		SELECT NO, NAME, TO_CHAR(JOIN_DATE, 'YY-MM-DD')AS JOIN_DATE FROM STUDENT
		WHERE ENROLLED_CLASS = #{cno}
	</select>
	
	<select id="selectListByMemNo" resultType="ClassVo">
		SELECT C.NO, T.NAME AS CATEGORY_NO, C.NAME, C.DESCRIPTION, C.FILE_NAME, C.MAX, M.NAME AS MEMBER_NO, TO_CHAR(C.BEGIN_DATE, 'YY-MM-DD') AS BEGIN_DATE, C.START_TIME, C.FEE, C.CLASSROOM, TO_CHAR(C.END_DATE, 'YY-MM-DD') AS END_DATE, C.FINISH_TIME
		FROM CLASS C
		JOIN CLASS_CATEGORY T ON C.CATEGORY_NO = T.NO
		JOIN MEMBER M ON C.MEMBER_NO = M.NO
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<insert id="insertCheckin">
		BEGIN
		<foreach collection="inputMap" item="m">
			INSERT INTO STUDENT_ROLL (NO, STUDENT_NO, CLASS_NO, CHECK_IN)
			VALUES(SEQ_STUDENT_ROLL_NO.NEXTVAL, #{m.studentNo}, #{m.classNo}, SYSDATE)
		</foreach>
		END;
	</insert>
	
	
	
</mapper>
