<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace = "messengerMapper">
	
	
	
	
	<!-- 게시글 메인화면 -->
	<select id="selectNoticeAll" resultType="com.kh.md.messenger.vo.MsgNoticeVo">
	
		SELECT 
		     N.NOTICE_NO
		    ,N.MSG_NO
		    ,B.NAME
		    ,N.TITLE
		    ,N.CONTENT
		    ,N.COUNT
		    ,N.ENROLL_DATE
		FROM MSG_NOTICE N 
		JOIN MESSENGER M
		ON N.MSG_NO = M.MSG_NO
		JOIN MEMBER B
		ON M.NO = B.NO
		WHERE N.CHECK_DELETE = 'O'
		ORDER BY N.NOTICE_NO DESC
	
	</select>
	
	
	
	<!-- 게시글 상세화면 -->
	<select id="selectOneByNo" resultType="com.kh.md.messenger.vo.MsgNoticeVo">
		
		 SELECT 
		     N.NOTICE_NO
            ,N.MSG_NO
		    ,B.NAME
		    ,M.FILE_NAME
		    ,N.TITLE
		    ,N.CONTENT
		    ,N.COUNT
		    ,N.ENROLL_DATE
		FROM MSG_NOTICE N JOIN MESSENGER M ON N.MSG_NO = M.MSG_NO
                          JOIN MEMBER B ON M.NO = B.NO
		WHERE N.NOTICE_NO = #{noticeNo} 
		AND N.CHECK_DELETE = 'O'
		ORDER BY N.NOTICE_NO DESC		
	
	</select>
	
	<!-- 공지톡 게시글 조회 수 증가 -->
	<update id="increaseHit">
		UPDATE MSG_NOTICE
			SET COUNT = COUNT + 1
		WHERE NOTICE_NO = #{noticeNo}
		AND CHECK_DELETE = 'O'
	</update>
	
	
	<!-- 공지톡 게시글 입력 -->
	<insert id="insertNotice">
	
		INSERT INTO MSG_NOTICE(
		     NOTICE_NO      
		    ,MSG_NO 
		    ,TITLE 
		    ,CONTENT 
		) VALUES(
		    SEQ_MSG_NOTICE_NO.NEXTVAL
		    ,#{msgNo}
		    ,#{title}
		    ,#{content}
		)
	
	</insert>


	<!-- 공지톡 수정 화면 -->
	<select id="selectEditByNo" resultType="com.kh.md.messenger.vo.MsgNoticeVo">
		SELECT 
		     N.NOTICE_NO
		    ,B.NAME MSG_NO
		    ,N.TITLE
		    ,N.CONTENT
		    ,N.COUNT
		    ,N.ENROLL_DATE
		FROM MSG_NOTICE N 
		JOIN MESSENGER M
		ON N.MSG_NO = M.MSG_NO
		JOIN MEMBER B
		ON M.NO = B.NO
		WHERE N.NOTICE_NO = #{noticeNo} 
		AND N.CHECK_DELETE = 'O'
	</select>

	<!-- 공지톡 수정 처리 -->
	<update id="updateEdit">
		UPDATE MSG_NOTICE
			SET  TITLE = #{title}
				,CONTENT = #{content}
		WHERE NOTICE_NO = #{noticeNo}
		AND CHECK_DELETE = 'O'
	</update>


	<!-- 공지톡 삭제 처리 -->
	<update id="updateDelete">
		UPDATE MSG_NOTICE
			SET CHECK_DELETE = 'X'
		WHERE NOTICE_NO = #{noticeNo}
	</update>


	<!-- 공지톡 게시글 총 수 -->
	<select id="selectTotalCnt" resultType="_int">
		SELECT COUNT(NOTICE_NO)
		FROM MSG_NOTICE
		WHERE CHECK_DELETE = 'O'
	</select>



	<!-- 공지톡 댓글 입력 -->
	<insert id="insertReple" >
		INSERT INTO MSG_NOTICE_REPLE(
		     REPLE_NO
		    ,MSG_NO
		    ,NOTICE_NO
		    ,CONTENT
		)VALUES(
		     SEQ_MSG_NOTICE_REPLE_NO.NEXTVAL
		    ,#{msgNo}
		    ,#{noticeNo}
		    ,#{content}
		)
		
	</insert>	
	
	<!-- 공지톡 댓글 리스트 가져오기 -->
	<select id="selectRepleList" resultType="com.kh.md.messenger.vo.MsgRepleVo">
		
		SELECT 
		     N.REPLE_NO
		    ,N.MSG_NO
		    ,B.NAME
		    ,M.FILE_NAME
		    ,N.NOTICE_NO
		    ,N.CONTENT
		    ,N.ENROLL_DATE
		FROM MSG_NOTICE_REPLE N
			JOIN MESSENGER M ON N.MSG_NO = M.MSG_NO
			JOIN MEMBER B ON M.NO = B.NO
		WHERE N.NOTICE_NO = #{noticeNo}
		AND N.CHECK_DELETE = 'O'
		ORDER BY N.REPLE_NO DESC
		
	</select>
	
	
	<!-- 공지톡 댓글 삭제 -->
	<update id="updateRepleDelete">
		UPDATE MSG_NOTICE_REPLE
			SET CHECK_DELETE = 'X'
		WHERE REPLE_NO = #{repleNo}
	</update>
	
	
	
	<!-- 메신저 등록 체크 -->
	<select id="selectCheckEnroll" resultType="com.kh.md.messenger.vo.MessengerVo">
		
	
		SELECT B.*,K.NAME AS PART, T.NAME DEPT
		FROM
		    (
		    SELECT A.*, P.NAME AS POSITION, P.RANK_NO, P.DEPT_NO 
		        FROM
		        (
		            SELECT 
		                 M.MSG_NO
		                ,M.NO
		                ,M.FILE_NAME
		                ,M.INTRODUCE
		                ,M.ENROLL_DATE
		                ,B.NAME
		                ,B.EMAIL
		                ,B.ADDRESS
		                ,B.PHONE
		                ,B.ACCOUNT
		                ,B.POSITION_NO
		            FROM MESSENGER M
		            JOIN MEMBER B ON M.NO = B.NO
		        ) A
		    JOIN POSITION P ON A.NO = P.NO 
		    WHERE A.NO = #{memberNo}
		    ) B
		JOIN RANK K ON B.RANK_NO = K.NO
		JOIN DEPT T ON B.DEPT_NO = T.NO 
		
	</select>
	
	
	<!-- 메신저 등록 하기 -->
	<insert id="insertMessenger">
		
		INSERT INTO MESSENGER
		(
		     MSG_NO
		    ,NO
		    ,FILE_NAME
		    ,INTRODUCE
		)
		VALUES
		(
		    SEQ_MESSENGER_NO.NEXTVAL
		    ,#{no}
		    ,#{fileName}
		    ,#{introduce}
		)

	
	</insert>
	
	<!-- 메신저 등록 회원 가져오기 -->
	<select id="selectAllMsg" resultType="com.kh.md.messenger.vo.MessengerVo">
		
			SELECT B.*,K.NAME AS PART, T.NAME DEPT
			FROM
			    (
			    SELECT A.*, P.NAME AS POSITION, P.RANK_NO, P.DEPT_NO 
			        FROM
			        (
			            SELECT 
			                 M.MSG_NO
			                ,M.NO
			                ,M.FILE_NAME
			                ,M.INTRODUCE
			                ,M.ENROLL_DATE
			                ,B.NAME
			                ,B.EMAIL
			                ,B.ADDRESS
			                ,B.PHONE
			                ,B.ACCOUNT
			                ,B.POSITION_NO
			            FROM MESSENGER M
			            JOIN MEMBER B ON M.NO = B.NO
			            ORDER BY B.POSITION_NO
			        ) A
			    JOIN POSITION P ON A.NO = P.NO 
			    ) B
			JOIN RANK K ON B.RANK_NO = K.NO
			JOIN DEPT T ON B.DEPT_NO = T.NO 
	
	</select>


	<!-- 메신저 프로필 변경 -->
	<update id="updateMsgOne">
		UPDATE MESSENGER
			SET   FILE_NAME = #{fileName}
				, INTRODUCE= #{introduce}
		WHERE NO = #{no}
	</update>	


	<!-- 메신저 쪽지 보내기 -->
	<insert id="insertNoteOne">
		INSERT INTO MSG_NOTE
		(
		     NOTE_NO
		    ,MSG_NO
		    ,RECEIVE_NO
		    ,TITLE
		    ,CONTENT
		    ,ORIGIN_NAME    
		    ,FILE_NAME
		)
		VALUES
		(
		    SEQ_MSG_NOTE_NO.NEXTVAL
		    ,#{msgNo}
		    ,#{receiveNo}
		    ,#{title}
		    ,#{content}
		    ,#{originName}
		    ,#{fileName}
		)
		
	
	</insert>

	
	<!-- 메신저 쪽지 내역 불러오기 -->
	<select id="selectNoteListByNo" resultType="com.kh.md.messenger.vo.MsgNoteVo">
	
		SELECT
	         T.NOTE_NO
	        ,T.MSG_NO
	        ,T.SEND_NAME
	        ,T.RECEIVE_NO
	        ,B.NAME RECEIVE_NAME
	        ,T.TITLE
	        ,T.CONTENT
	        ,T.SEND_DATE
	        ,T.RECEIVE_DATE
	        ,T.ORIGIN_NAME
	        ,T.FILE_NAME
		FROM 
		(
		    SELECT 
		         M.NOTE_NO
                ,M.MSG_NO
                ,M.RECEIVE_NO
                ,B.NAME SEND_NAME
                ,M.TITLE
                ,M.CONTENT
                ,M.SEND_DATE
                ,M.RECEIVE_DATE
                ,M.ORIGIN_NAME
                ,M.FILE_NAME
		    FROM MSG_NOTE M
		    JOIN MESSENGER G ON M.MSG_NO = G.MSG_NO
		    JOIN MEMBER B ON G.NO = B.NO
		    WHERE M.MSG_NO = #{msgNo} AND M.CHECK_DELETE = 'O'
		    OR M.RECEIVE_NO = #{msgNo} AND M.CHECK_DELETE = 'O'
		    
		    ORDER BY M.NOTE_NO DESC
		) T
		JOIN MESSENGER G ON T.RECEIVE_NO = G.MSG_NO
	    JOIN MEMBER B ON G.NO = B.NO
	    
	</select>


	<!-- 검색 값으로 쪽지 가져오기 -->
	<select id="selectNoteKeyword" resultType="com.kh.md.messenger.vo.MsgNoteVo">
		SELECT Y.*
		FROM(
			 SELECT
		         T.NOTE_NO
		        ,T.MSG_NO
		        ,T.SEND_NAME
		        ,B.NAME RECEIVE_NAME
		        ,T.RECEIVE_NO
		        ,T.TITLE
		        ,T.CONTENT
		        ,T.SEND_DATE
		        ,T.RECEIVE_DATE
		        ,T.ORIGIN_NAME
		        ,T.FILE_NAME
			FROM 
			(
			    SELECT 
			         M.NOTE_NO
	                ,M.MSG_NO
	                ,M.RECEIVE_NO
	                ,B.NAME SEND_NAME
	                ,M.TITLE
	                ,M.CONTENT
	                ,M.SEND_DATE
	                ,M.RECEIVE_DATE
	                ,M.ORIGIN_NAME
	                ,M.FILE_NAME
			    FROM MSG_NOTE M
			    JOIN MESSENGER G ON M.MSG_NO = G.MSG_NO
			    JOIN MEMBER B ON G.NO = B.NO
			    WHERE M.MSG_NO = #{msgNo} AND M.CHECK_DELETE = 'O'
			    OR M.RECEIVE_NO = #{msgNo} AND M.CHECK_DELETE = 'O'
			    
			    ORDER BY M.NOTE_NO DESC
			) T
			JOIN MESSENGER G ON T.RECEIVE_NO = G.MSG_NO
	    	JOIN MEMBER B ON G.NO = B.NO
	    ) Y
	        
		<if test="menu == 'sendName'">
			WHERE SEND_NAME LIKE '%'||#{keyword}||'%'
		</if>
		
		<if test="menu == 'receiveName'">
			WHERE RECEIVE_NAME LIKE '%'||#{keyword}||'%'
		</if>
		
		<if test="menu == 'title'">
			WHERE TITLE LIKE '%'||#{keyword}||'%'
		</if>
		
		<if test="menu == 'comment'">
			WHERE CONTENT LIKE '%'||#{keyword}||'%'
		</if>
		
		
	</select>	


	<!-- 쪽지 - 쪽지번호로 쪽지 1개 가져오기 -->
	<select id="selectNoteByNo" resultType="com.kh.md.messenger.vo.MsgNoteVo">
		
		SELECT
	         T.NOTE_NO
	        ,T.MSG_NO
            ,T.SEND_NAME
            ,T.RECEIVE_NO
	        ,B.NAME RECEIVE_NAME
	        ,T.TITLE
	        ,T.CONTENT
	        ,T.SEND_DATE
	        ,T.RECEIVE_DATE
	        ,T.ORIGIN_NAME
	        ,T.FILE_NAME
		FROM 
		(
		    SELECT 
		         M.NOTE_NO
                ,M.MSG_NO 
		        ,B.NAME SEND_NAME
		        ,M.RECEIVE_NO
		        ,M.TITLE
		        ,M.CONTENT
		        ,M.SEND_DATE
		        ,M.RECEIVE_DATE
		        ,M.ORIGIN_NAME
		        ,M.FILE_NAME
		    FROM MSG_NOTE M
		    JOIN MESSENGER G ON M.MSG_NO = G.MSG_NO
		    JOIN MEMBER B ON G.NO = B.NO
		    WHERE M.NOTE_NO = #{repleNoteNo} AND M.CHECK_DELETE = 'O'
		    ORDER BY M.NOTE_NO DESC
		) T
		JOIN MESSENGER G ON T.RECEIVE_NO = G.MSG_NO
    	JOIN MEMBER B ON G.NO = B.NO
    	
	</select>

	<!-- 쪽지 - 쪽지번호로 쪽지 삭제 -->
	<update id="updateNoteDelete">
		UPDATE MSG_NOTE
		    SET CHECK_DELETE = 'X'
		WHERE NOTE_NO = #{deleteNoteNo}
	</update>



	<!-- 쪽지- 부서명에 맞는 멤버 가져오기 -->
	<select id="selectDeptMember" resultType="hashmap">
		
		 SELECT C.*
		 FROM
		        (
		        SELECT B.*,K.NAME AS PART, T.NAME DEPT
				FROM
				    (
				    SELECT A.*, P.NAME AS POSITION, P.RANK_NO, P.DEPT_NO 
				        FROM
				        (
				            SELECT 
				                 M.MSG_NO
		                        ,B.NO 
				                ,B.NAME
				                ,B.POSITION_NO
				            FROM MESSENGER M
				            JOIN MEMBER B ON M.NO = B.NO
				        ) A
				    JOIN POSITION P ON A.NO = P.NO 
				    ) B
				JOIN RANK K ON B.RANK_NO = K.NO
				JOIN DEPT T ON B.DEPT_NO = T.NO 
		        ) C
		WHERE C.DEPT = #{deptName}
		ORDER BY C.POSITION_NO
		
	</select>
	
	<!-- 파일보관함 - 이미지 파일 전부 가져오기 -->
	<select id="selectAllFileImgByNo" resultType="com.kh.md.messenger.vo.MsgFileboxVo">
		
		SELECT 
	         F.FILE_NO
	        ,F.MSG_NO
	        ,F.FILE_NAME
	        ,C.ORIGIN_NAME
	        ,F.ENROLL_DATE
		FROM
		(
		        SELECT
		             FILE_NO
		            ,MSG_NO
		            ,FILE_NAME
		            ,COPY_NAME
		            ,ENROLL_DATE
		        FROM IMG_FILEBOX
		        WHERE MSG_NO = #{msgNo}
		            AND CHECK_DELETE = 'O'
		        ORDER BY FILE_NO DESC
		) F JOIN COPY_FILE_ORIGIN_NAME C ON F.COPY_NAME = C.COPY_NAME        

	
	</select>
	
	
	<!-- 파일보관함 - 예외 파일 전부 가져오기 -->
	<select id="selectAllEtcFileByNo" resultType="com.kh.md.messenger.vo.MsgFileboxVo">
		
		SELECT 
		         F.FILE_NO
		        ,F.MSG_NO
		        ,F.FILE_NAME
		        ,C.ORIGIN_NAME
		        ,F.ENROLL_DATE
		FROM
		(
		        SELECT
		             FILE_NO
		            ,MSG_NO
		            ,FILE_NAME
		            ,COPY_NAME
		            ,ENROLL_DATE
		        FROM FILEBOX
		        WHERE MSG_NO = #{msgNo}
		            AND CHECK_DELETE = 'O'
		        ORDER BY FILE_NO DESC
		) F JOIN COPY_FILE_ORIGIN_NAME C ON F.COPY_NAME = C.COPY_NAME 
	
	</select>
	
	<!-- 파일보관함 - 이미지 파일 추가 -->
	<insert id="insertImgFilebox">
	
		INSERT INTO IMG_FILEBOX
		(
		    FILE_NO
		    ,MSG_NO
		    ,FILE_NAME
		    ,COPY_NAME
		)
		VALUES
		(
		    SEQ_IMG_FILEBOX_NO.NEXTVAL
		    ,#{msgNo}
		    ,#{fileName}
		    ,#{copyName}
		)
	
	
	</insert>
	
	
	<!-- 파일보관함 - etc파일 추가  -->
	<insert id="insertFileBox">
	
		INSERT INTO FILEBOX
		(
		     FILE_NO
		    ,MSG_NO
		    ,FILE_NAME
		    ,COPY_NAME
		)
		VALUES
		(
		    SEQ_FILEBOX_NO.NEXTVAL
		    ,#{msgNo}
		    ,#{fileName}
		    ,#{copyName}
		)
	
	
	</insert>
	
	
	<!-- 파일보관함 - 파일 삭제 -->
	<update id="fileBoxDelete">
		
		
		<if test="fileCategory == 'jpg'">
			UPDATE IMG_FILEBOX
		</if>
		
		<if test="fileCategory == 'etc'">
			UPDATE FILEBOX
		</if>
		
		    SET CHECK_DELETE = 'X'
		WHERE FILE_NO = #{fileNo} 
		AND FILE_NAME = #{fileName}
	
	</update>
	
	
	<!-- 파일복사 원본파일명 저장 -->
	<insert id="insertCopyFileName">
		INSERT INTO COPY_FILE_ORIGIN_NAME
		(
			 COPY_NO
			,ORIGIN_NAME
			,COPY_NAME
		)
		VALUES
		(
			SEQ_COPY_FILE_ORIGIN_NAME_NO.NEXTVAL
			,#{originName}
			,#{copyName}
		)
		
		
	</insert>
	

</mapper>
